import "~/styles/globals.css";
import { GeistSans } from "geist/font/sans";
import { type Metadata } from "next";
import { TRPCReactProvider } from "~/trpc/react";
import Link from "next/link";
import { createClient } from "~/utils/supabase/server";
import Navigation from "./_components/navigation";
import { Suspense } from "react";
import { Audio} from "react-loader-spinner"


export const metadata: Metadata = {
  title: {
    template: "%s - t3-supabase-template",
    default: "t3-supabase-template"
  },
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="ja" className={`${GeistSans.variable}`}>
      <body>
        <TRPCReactProvider>
          <header>
            <h1>SACCIM</h1>
            <Suspense fallback={<div>loading...</div>}><WithAuthLayout/></Suspense>
          </header>
          {children}
          <footer>powered by T3Stack and supabase</footer>
        </TRPCReactProvider>
      </body>
    </html>
  );
}

async function WithAuthLayout() {
  const supabase = await createClient();
  const { data: { user } } = await supabase.auth.getUser()
  console.log(user)
  return <>
  <Navigation authorized={!!user} />
  {user && <div>{user.email}でログイン済み</div>}
  </>
}
